terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 5.0"
    }
  }
}

provider "aws" {
  region = "us-east-1"
}

# This module sets up the overall application infrastructure
module "agile_stories" {
  source = "../../"
  
  account_id  = var.account_id
  environment = "dev"
  aws_region  = "us-east-1"
  vpc_id      = var.vpc_id
  subnet_ids  = var.subnet_ids

  # Lambda package paths
  analyze_story_package_path  = "../../../backend/dist/analyze_story.zip"
  estimate_story_package_path = "../../../backend/dist/estimate_story.zip"
  get_status_package_path    = "../../../backend/dist/get_status.zip"
  
  # Other configurations
  openai_api_key = var.openai_api_key
}

module "lambda_functions" {
  source                      = "../../modules/lambda"
  account_id                  = var.account_id
  function_name               = "agile-stories-${var.environment}"
  aws_region                  = var.aws_region
  environment                 = var.environment
  vpc_id                      = var.vpc_id
  subnet_ids                  = var.subnet_ids
  openai_api_key             = var.openai_api_key
  stories_table_arn          = "arn:aws:dynamodb:${var.aws_region}:${var.account_id}:table/dev-agile-stories"
  estimations_table_arn      = "arn:aws:dynamodb:${var.aws_region}:${var.account_id}:table/dev-agile-stories-estimations"
  terraform_locks_table_arn  = "arn:aws:dynamodb:${var.aws_region}:${var.account_id}:table/agile-stories-terraform-locks"
  analyze_story_package_path  = var.analyze_story_package_path
  estimate_story_package_path = var.estimate_story_package_path
  get_status_package_path    = var.get_status_package_path
}

# Add DynamoDB module if not already present
module "dynamodb" {
  source      = "../../modules/dynamodb"
  environment = var.environment
} 