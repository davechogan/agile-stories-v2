
[1m[36mNote:[0m[1m Objects have changed outside of Terraform
[0m
Terraform detected the following changes made outside of Terraform since the
last "terraform apply" which may have affected this plan:

[1m  # module.agile_stories.module.sqs.aws_sqs_queue.analysis_dlq[0m has been deleted
[0m  [31m-[0m[0m resource "aws_sqs_queue" "analysis_dlq" {
        id                          = "https://sqs.us-east-1.amazonaws.com/784902437693/dev-agile-stories-analysis-dlq.fifo"
      [31m-[0m[0m name                        = "dev-agile-stories-analysis-dlq.fifo" [90m-> null[0m[0m
        tags                        = {
            "Environment" = "dev"
            "Project"     = "agile-stories"
        }
        [90m# (8 unchanged attributes hidden)[0m[0m
    }

[1m  # module.agile_stories.module.sqs.aws_sqs_queue.story_estimation_dlq[0m has been deleted
[0m  [31m-[0m[0m resource "aws_sqs_queue" "story_estimation_dlq" {
        id                          = "https://sqs.us-east-1.amazonaws.com/784902437693/dev-agile-stories-estimation-dlq.fifo"
      [31m-[0m[0m name                        = "dev-agile-stories-estimation-dlq.fifo" [90m-> null[0m[0m
        tags                        = {
            "Environment" = "dev"
            "Project"     = "agile-stories"
        }
        [90m# (8 unchanged attributes hidden)[0m[0m
    }


Unless you have made equivalent changes to your configuration, or ignored the
relevant attributes using ignore_changes, the following plan may include
actions to undo or respond to these changes.
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m
  [33m~[0m update in-place[0m
[31m-[0m/[32m+[0m destroy and then create replacement[0m

Terraform will perform the following actions:

[1m  # module.dynamodb.aws_dynamodb_table.estimations[0m will be created
[0m  [32m+[0m[0m resource "aws_dynamodb_table" "estimations" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m billing_mode     = "PAY_PER_REQUEST"
      [32m+[0m[0m hash_key         = "estimation_id"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m name             = "dev-agile-stories-estimations"
      [32m+[0m[0m range_key        = "story_id"
      [32m+[0m[0m read_capacity    = (known after apply)
      [32m+[0m[0m stream_arn       = (known after apply)
      [32m+[0m[0m stream_enabled   = true
      [32m+[0m[0m stream_label     = (known after apply)
      [32m+[0m[0m stream_view_type = "NEW_AND_OLD_IMAGES"
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m write_capacity   = (known after apply)

      [32m+[0m[0m attribute {
          [32m+[0m[0m name = "created_at"
          [32m+[0m[0m type = "S"
        }
      [32m+[0m[0m attribute {
          [32m+[0m[0m name = "estimation_id"
          [32m+[0m[0m type = "S"
        }
      [32m+[0m[0m attribute {
          [32m+[0m[0m name = "story_id"
          [32m+[0m[0m type = "S"
        }

      [32m+[0m[0m global_secondary_index {
          [32m+[0m[0m hash_key           = "story_id"
          [32m+[0m[0m name               = "story-created-index"
          [32m+[0m[0m non_key_attributes = []
          [32m+[0m[0m projection_type    = "ALL"
          [32m+[0m[0m range_key          = "created_at"
          [32m+[0m[0m read_capacity      = (known after apply)
          [32m+[0m[0m write_capacity     = (known after apply)
        }

      [32m+[0m[0m point_in_time_recovery {
          [32m+[0m[0m enabled = true
        }

      [32m+[0m[0m server_side_encryption {
          [32m+[0m[0m enabled     = true
          [32m+[0m[0m kms_key_arn = (known after apply)
        }
    }

[1m  # module.dynamodb.aws_iam_policy.dynamodb_access[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_policy" "dynamodb_access" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m attachment_count = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m name             = "dev-agile-stories-dynamodb-access"
      [32m+[0m[0m name_prefix      = (known after apply)
      [32m+[0m[0m path             = "/"
      [32m+[0m[0m policy           = (known after apply)
      [32m+[0m[0m policy_id        = (known after apply)
      [32m+[0m[0m tags_all         = (known after apply)
    }

[1m  # module.lambda_functions.aws_cloudwatch_log_group.analyze_story[0m will be created
[0m  [32m+[0m[0m resource "aws_cloudwatch_log_group" "analyze_story" {
      [32m+[0m[0m arn               = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m log_group_class   = (known after apply)
      [32m+[0m[0m name              = "/aws/lambda/dev-agile-stories-analyze"
      [32m+[0m[0m name_prefix       = (known after apply)
      [32m+[0m[0m retention_in_days = 30
      [32m+[0m[0m skip_destroy      = false
      [32m+[0m[0m tags_all          = (known after apply)
    }

[1m  # module.lambda_functions.aws_cloudwatch_log_group.estimate_story[0m will be created
[0m  [32m+[0m[0m resource "aws_cloudwatch_log_group" "estimate_story" {
      [32m+[0m[0m arn               = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m log_group_class   = (known after apply)
      [32m+[0m[0m name              = "/aws/lambda/dev-agile-stories-estimate"
      [32m+[0m[0m name_prefix       = (known after apply)
      [32m+[0m[0m retention_in_days = 30
      [32m+[0m[0m skip_destroy      = false
      [32m+[0m[0m tags_all          = (known after apply)
    }

[1m  # module.lambda_functions.aws_cloudwatch_log_group.get_status[0m will be created
[0m  [32m+[0m[0m resource "aws_cloudwatch_log_group" "get_status" {
      [32m+[0m[0m arn               = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m log_group_class   = (known after apply)
      [32m+[0m[0m name              = "/aws/lambda/dev-agile-stories-status"
      [32m+[0m[0m name_prefix       = (known after apply)
      [32m+[0m[0m retention_in_days = 30
      [32m+[0m[0m skip_destroy      = false
      [32m+[0m[0m tags_all          = (known after apply)
    }

[1m  # module.lambda_functions.aws_iam_role.lambda_role[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "lambda_role" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "lambda.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "dev-agile-stories-lambda-role"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m unique_id             = (known after apply)
    }

[1m  # module.lambda_functions.aws_iam_role_policy.dynamodb_access[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy" "dynamodb_access" {
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "dev-agile-stories-dynamodb-access"
      [32m+[0m[0m name_prefix = (known after apply)
      [32m+[0m[0m policy      = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action   = [
                          [32m+[0m[0m "dynamodb:GetItem",
                          [32m+[0m[0m "dynamodb:PutItem",
                          [32m+[0m[0m "dynamodb:UpdateItem",
                          [32m+[0m[0m "dynamodb:DeleteItem",
                          [32m+[0m[0m "dynamodb:Query",
                          [32m+[0m[0m "dynamodb:BatchGetItem",
                          [32m+[0m[0m "dynamodb:BatchWriteItem",
                        ]
                      [32m+[0m[0m Effect   = "Allow"
                      [32m+[0m[0m Resource = [
                          [32m+[0m[0m "arn:aws:dynamodb:us-east-1:784902437693:table/dev-agile-stories",
                          [32m+[0m[0m "arn:aws:dynamodb:us-east-1:784902437693:table/dev-agile-stories/index/*",
                        ]
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m role        = (known after apply)
    }

[1m  # module.lambda_functions.aws_iam_role_policy.secrets_manager_policy[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy" "secrets_manager_policy" {
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "dev-lambda-functions-secrets-policy"
      [32m+[0m[0m name_prefix = (known after apply)
      [32m+[0m[0m policy      = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action   = [
                          [32m+[0m[0m "secretsmanager:GetSecretValue",
                        ]
                      [32m+[0m[0m Effect   = "Allow"
                      [32m+[0m[0m Resource = "arn:aws:secretsmanager:us-east-1:784902437693:secret:openai_key*"
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m role        = (known after apply)
    }

[1m  # module.lambda_functions.aws_iam_role_policy_attachment.lambda_basic[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "lambda_basic" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      [32m+[0m[0m role       = "dev-agile-stories-lambda-role"
    }

[1m  # module.lambda_functions.aws_iam_role_policy_attachment.lambda_vpc[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "lambda_vpc" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
      [32m+[0m[0m role       = "dev-agile-stories-lambda-role"
    }

[1m  # module.lambda_functions.aws_lambda_function.analyze_story[0m will be created
[0m  [32m+[0m[0m resource "aws_lambda_function" "analyze_story" {
      [32m+[0m[0m architectures                  = (known after apply)
      [32m+[0m[0m arn                            = (known after apply)
      [32m+[0m[0m code_sha256                    = (known after apply)
      [32m+[0m[0m filename                       = "../../../backend/src/analyze_story/package.zip"
      [32m+[0m[0m function_name                  = "dev-agile-stories-analyze"
      [32m+[0m[0m handler                        = "lambda_function.lambda_handler"
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m invoke_arn                     = (known after apply)
      [32m+[0m[0m last_modified                  = (known after apply)
      [32m+[0m[0m memory_size                    = 256
      [32m+[0m[0m package_type                   = "Zip"
      [32m+[0m[0m publish                        = false
      [32m+[0m[0m qualified_arn                  = (known after apply)
      [32m+[0m[0m qualified_invoke_arn           = (known after apply)
      [32m+[0m[0m reserved_concurrent_executions = -1
      [32m+[0m[0m role                           = (known after apply)
      [32m+[0m[0m runtime                        = "python3.11"
      [32m+[0m[0m signing_job_arn                = (known after apply)
      [32m+[0m[0m signing_profile_version_arn    = (known after apply)
      [32m+[0m[0m skip_destroy                   = false
      [32m+[0m[0m source_code_hash               = (known after apply)
      [32m+[0m[0m source_code_size               = (known after apply)
      [32m+[0m[0m tags                           = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m tags_all                       = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m timeout                        = 30
      [32m+[0m[0m version                        = (known after apply)

      [32m+[0m[0m environment {
          [32m+[0m[0m variables = {
              [32m+[0m[0m "ENVIRONMENT"    = "dev"
              [32m+[0m[0m "OPENAI_API_KEY" = (sensitive value)
            }
        }

      [32m+[0m[0m vpc_config {
          [32m+[0m[0m ipv6_allowed_for_dual_stack = false
          [32m+[0m[0m security_group_ids          = (known after apply)
          [32m+[0m[0m subnet_ids                  = [
              [32m+[0m[0m "subnet-027bcb766a648dab3",
              [32m+[0m[0m "subnet-05c29484564e0db92",
            ]
          [32m+[0m[0m vpc_id                      = (known after apply)
        }
    }

[1m  # module.lambda_functions.aws_lambda_function.estimate_story[0m will be created
[0m  [32m+[0m[0m resource "aws_lambda_function" "estimate_story" {
      [32m+[0m[0m architectures                  = (known after apply)
      [32m+[0m[0m arn                            = (known after apply)
      [32m+[0m[0m code_sha256                    = (known after apply)
      [32m+[0m[0m filename                       = "../../../backend/src/estimate_story/package.zip"
      [32m+[0m[0m function_name                  = "dev-agile-stories-estimate"
      [32m+[0m[0m handler                        = "lambda_function.lambda_handler"
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m invoke_arn                     = (known after apply)
      [32m+[0m[0m last_modified                  = (known after apply)
      [32m+[0m[0m memory_size                    = 256
      [32m+[0m[0m package_type                   = "Zip"
      [32m+[0m[0m publish                        = false
      [32m+[0m[0m qualified_arn                  = (known after apply)
      [32m+[0m[0m qualified_invoke_arn           = (known after apply)
      [32m+[0m[0m reserved_concurrent_executions = -1
      [32m+[0m[0m role                           = (known after apply)
      [32m+[0m[0m runtime                        = "python3.11"
      [32m+[0m[0m signing_job_arn                = (known after apply)
      [32m+[0m[0m signing_profile_version_arn    = (known after apply)
      [32m+[0m[0m skip_destroy                   = false
      [32m+[0m[0m source_code_hash               = (known after apply)
      [32m+[0m[0m source_code_size               = (known after apply)
      [32m+[0m[0m tags                           = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m tags_all                       = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m timeout                        = 30
      [32m+[0m[0m version                        = (known after apply)

      [32m+[0m[0m environment {
          [32m+[0m[0m variables = {
              [32m+[0m[0m "ENVIRONMENT"    = "dev"
              [32m+[0m[0m "OPENAI_API_KEY" = (sensitive value)
            }
        }

      [32m+[0m[0m vpc_config {
          [32m+[0m[0m ipv6_allowed_for_dual_stack = false
          [32m+[0m[0m security_group_ids          = (known after apply)
          [32m+[0m[0m subnet_ids                  = [
              [32m+[0m[0m "subnet-027bcb766a648dab3",
              [32m+[0m[0m "subnet-05c29484564e0db92",
            ]
          [32m+[0m[0m vpc_id                      = (known after apply)
        }
    }

[1m  # module.lambda_functions.aws_lambda_function.get_status[0m will be created
[0m  [32m+[0m[0m resource "aws_lambda_function" "get_status" {
      [32m+[0m[0m architectures                  = (known after apply)
      [32m+[0m[0m arn                            = (known after apply)
      [32m+[0m[0m code_sha256                    = (known after apply)
      [32m+[0m[0m filename                       = "../../../backend/src/get_status/package.zip"
      [32m+[0m[0m function_name                  = "dev-agile-stories-status"
      [32m+[0m[0m handler                        = "lambda_function.lambda_handler"
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m invoke_arn                     = (known after apply)
      [32m+[0m[0m last_modified                  = (known after apply)
      [32m+[0m[0m memory_size                    = 128
      [32m+[0m[0m package_type                   = "Zip"
      [32m+[0m[0m publish                        = false
      [32m+[0m[0m qualified_arn                  = (known after apply)
      [32m+[0m[0m qualified_invoke_arn           = (known after apply)
      [32m+[0m[0m reserved_concurrent_executions = -1
      [32m+[0m[0m role                           = (known after apply)
      [32m+[0m[0m runtime                        = "python3.11"
      [32m+[0m[0m signing_job_arn                = (known after apply)
      [32m+[0m[0m signing_profile_version_arn    = (known after apply)
      [32m+[0m[0m skip_destroy                   = false
      [32m+[0m[0m source_code_hash               = (known after apply)
      [32m+[0m[0m source_code_size               = (known after apply)
      [32m+[0m[0m tags                           = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m tags_all                       = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m timeout                        = 10
      [32m+[0m[0m version                        = (known after apply)

      [32m+[0m[0m environment {
          [32m+[0m[0m variables = {
              [32m+[0m[0m "ENVIRONMENT" = "dev"
            }
        }

      [32m+[0m[0m vpc_config {
          [32m+[0m[0m ipv6_allowed_for_dual_stack = false
          [32m+[0m[0m security_group_ids          = (known after apply)
          [32m+[0m[0m subnet_ids                  = [
              [32m+[0m[0m "subnet-027bcb766a648dab3",
              [32m+[0m[0m "subnet-05c29484564e0db92",
            ]
          [32m+[0m[0m vpc_id                      = (known after apply)
        }
    }

[1m  # module.lambda_functions.aws_security_group.lambda[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "lambda" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Security group for Agile Stories Lambda functions"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = (known after apply)
      [32m+[0m[0m name                   = "dev-agile-stories-lambda"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m vpc_id                 = "vpc-075ca467a1d924c87"
    }

[1m  # module.agile_stories.module.api_gateway.aws_apigatewayv2_integration.analyze_story[0m will be updated in-place
[0m  [33m~[0m[0m resource "aws_apigatewayv2_integration" "analyze_story" {
        id                     = "8aqmhph"
      [33m~[0m[0m integration_uri        = "arn:aws:lambda:us-east-1:784902437693:function:dev-agile-stories-analyze" -> (known after apply)
        [90m# (9 unchanged attributes hidden)[0m[0m
    }

[1m  # module.agile_stories.module.api_gateway.aws_apigatewayv2_integration.estimate_story[0m will be updated in-place
[0m  [33m~[0m[0m resource "aws_apigatewayv2_integration" "estimate_story" {
        id                     = "5pzvmkk"
      [33m~[0m[0m integration_uri        = "arn:aws:lambda:us-east-1:784902437693:function:dev-agile-stories-estimate" -> (known after apply)
        [90m# (9 unchanged attributes hidden)[0m[0m
    }

[1m  # module.agile_stories.module.api_gateway.aws_apigatewayv2_integration.get_estimation_status[0m will be updated in-place
[0m  [33m~[0m[0m resource "aws_apigatewayv2_integration" "get_estimation_status" {
        id                     = "j7gt95u"
      [33m~[0m[0m integration_uri        = "arn:aws:lambda:us-east-1:784902437693:function:dev-agile-stories-status" -> (known after apply)
        [90m# (9 unchanged attributes hidden)[0m[0m
    }

[1m  # module.agile_stories.module.api_gateway.aws_lambda_permission.analyze_story[0m will be created
[0m  [32m+[0m[0m resource "aws_lambda_permission" "analyze_story" {
      [32m+[0m[0m action              = "lambda:InvokeFunction"
      [32m+[0m[0m function_name       = "dev-agile-stories-analyze"
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m principal           = "apigateway.amazonaws.com"
      [32m+[0m[0m source_arn          = "arn:aws:execute-api:us-east-1:784902437693:6mrsmmqp83/*/*"
      [32m+[0m[0m statement_id        = "AllowAPIGatewayInvoke"
      [32m+[0m[0m statement_id_prefix = (known after apply)
    }

[1m  # module.agile_stories.module.api_gateway.aws_lambda_permission.estimate_story[0m will be created
[0m  [32m+[0m[0m resource "aws_lambda_permission" "estimate_story" {
      [32m+[0m[0m action              = "lambda:InvokeFunction"
      [32m+[0m[0m function_name       = "dev-agile-stories-estimate"
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m principal           = "apigateway.amazonaws.com"
      [32m+[0m[0m source_arn          = "arn:aws:execute-api:us-east-1:784902437693:6mrsmmqp83/*/*"
      [32m+[0m[0m statement_id        = "AllowAPIGatewayInvoke"
      [32m+[0m[0m statement_id_prefix = (known after apply)
    }

[1m  # module.agile_stories.module.api_gateway.aws_lambda_permission.get_estimation_status[0m will be created
[0m  [32m+[0m[0m resource "aws_lambda_permission" "get_estimation_status" {
      [32m+[0m[0m action              = "lambda:InvokeFunction"
      [32m+[0m[0m function_name       = "dev-agile-stories-status"
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m principal           = "apigateway.amazonaws.com"
      [32m+[0m[0m source_arn          = "arn:aws:execute-api:us-east-1:784902437693:6mrsmmqp83/*/*"
      [32m+[0m[0m statement_id        = "AllowAPIGatewayInvoke"
      [32m+[0m[0m statement_id_prefix = (known after apply)
    }

[1m  # module.agile_stories.module.lambda.aws_cloudwatch_log_group.analyze_story[0m will be created
[0m  [32m+[0m[0m resource "aws_cloudwatch_log_group" "analyze_story" {
      [32m+[0m[0m arn               = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m log_group_class   = (known after apply)
      [32m+[0m[0m name              = "/aws/lambda/dev-agile-stories-analyze"
      [32m+[0m[0m name_prefix       = (known after apply)
      [32m+[0m[0m retention_in_days = 30
      [32m+[0m[0m skip_destroy      = false
      [32m+[0m[0m tags_all          = (known after apply)
    }

[1m  # module.agile_stories.module.lambda.aws_cloudwatch_log_group.estimate_story[0m will be created
[0m  [32m+[0m[0m resource "aws_cloudwatch_log_group" "estimate_story" {
      [32m+[0m[0m arn               = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m log_group_class   = (known after apply)
      [32m+[0m[0m name              = "/aws/lambda/dev-agile-stories-estimate"
      [32m+[0m[0m name_prefix       = (known after apply)
      [32m+[0m[0m retention_in_days = 30
      [32m+[0m[0m skip_destroy      = false
      [32m+[0m[0m tags_all          = (known after apply)
    }

[1m  # module.agile_stories.module.lambda.aws_cloudwatch_log_group.get_status[0m will be created
[0m  [32m+[0m[0m resource "aws_cloudwatch_log_group" "get_status" {
      [32m+[0m[0m arn               = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m log_group_class   = (known after apply)
      [32m+[0m[0m name              = "/aws/lambda/dev-agile-stories-status"
      [32m+[0m[0m name_prefix       = (known after apply)
      [32m+[0m[0m retention_in_days = 30
      [32m+[0m[0m skip_destroy      = false
      [32m+[0m[0m tags_all          = (known after apply)
    }

[1m  # module.agile_stories.module.lambda.aws_iam_role.lambda_role[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "lambda_role" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "lambda.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "dev-agile-stories-lambda-role"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m unique_id             = (known after apply)
    }

[1m  # module.agile_stories.module.lambda.aws_iam_role_policy.dynamodb_access[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy" "dynamodb_access" {
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "dev-agile-stories-dynamodb-access"
      [32m+[0m[0m name_prefix = (known after apply)
      [32m+[0m[0m policy      = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action   = [
                          [32m+[0m[0m "dynamodb:GetItem",
                          [32m+[0m[0m "dynamodb:PutItem",
                          [32m+[0m[0m "dynamodb:UpdateItem",
                          [32m+[0m[0m "dynamodb:DeleteItem",
                          [32m+[0m[0m "dynamodb:Query",
                          [32m+[0m[0m "dynamodb:BatchGetItem",
                          [32m+[0m[0m "dynamodb:BatchWriteItem",
                        ]
                      [32m+[0m[0m Effect   = "Allow"
                      [32m+[0m[0m Resource = [
                          [32m+[0m[0m "arn:aws:dynamodb:us-east-1:784902437693:table/dev-agile-stories",
                          [32m+[0m[0m "arn:aws:dynamodb:us-east-1:784902437693:table/dev-agile-stories/index/*",
                        ]
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m role        = (known after apply)
    }

[1m  # module.agile_stories.module.lambda.aws_iam_role_policy.secrets_manager_policy[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy" "secrets_manager_policy" {
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "dev-agile-stories-secrets-policy"
      [32m+[0m[0m name_prefix = (known after apply)
      [32m+[0m[0m policy      = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action   = [
                          [32m+[0m[0m "secretsmanager:GetSecretValue",
                        ]
                      [32m+[0m[0m Effect   = "Allow"
                      [32m+[0m[0m Resource = "arn:aws:secretsmanager:us-east-1:784902437693:secret:openai_key*"
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m role        = (known after apply)
    }

[1m  # module.agile_stories.module.lambda.aws_iam_role_policy_attachment.lambda_basic[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "lambda_basic" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      [32m+[0m[0m role       = "dev-agile-stories-lambda-role"
    }

[1m  # module.agile_stories.module.lambda.aws_iam_role_policy_attachment.lambda_vpc[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "lambda_vpc" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
      [32m+[0m[0m role       = "dev-agile-stories-lambda-role"
    }

[1m  # module.agile_stories.module.lambda.aws_lambda_function.analyze_story[0m will be created
[0m  [32m+[0m[0m resource "aws_lambda_function" "analyze_story" {
      [32m+[0m[0m architectures                  = (known after apply)
      [32m+[0m[0m arn                            = (known after apply)
      [32m+[0m[0m code_sha256                    = (known after apply)
      [32m+[0m[0m filename                       = "../../../backend/src/analyze_story/package.zip"
      [32m+[0m[0m function_name                  = "dev-agile-stories-analyze"
      [32m+[0m[0m handler                        = "lambda_function.lambda_handler"
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m invoke_arn                     = (known after apply)
      [32m+[0m[0m last_modified                  = (known after apply)
      [32m+[0m[0m memory_size                    = 256
      [32m+[0m[0m package_type                   = "Zip"
      [32m+[0m[0m publish                        = false
      [32m+[0m[0m qualified_arn                  = (known after apply)
      [32m+[0m[0m qualified_invoke_arn           = (known after apply)
      [32m+[0m[0m reserved_concurrent_executions = -1
      [32m+[0m[0m role                           = (known after apply)
      [32m+[0m[0m runtime                        = "python3.11"
      [32m+[0m[0m signing_job_arn                = (known after apply)
      [32m+[0m[0m signing_profile_version_arn    = (known after apply)
      [32m+[0m[0m skip_destroy                   = false
      [32m+[0m[0m source_code_hash               = (known after apply)
      [32m+[0m[0m source_code_size               = (known after apply)
      [32m+[0m[0m tags                           = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m tags_all                       = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m timeout                        = 30
      [32m+[0m[0m version                        = (known after apply)

      [32m+[0m[0m environment {
          [32m+[0m[0m variables = {
              [32m+[0m[0m "ENVIRONMENT"    = "dev"
              [32m+[0m[0m "OPENAI_API_KEY" = (sensitive value)
            }
        }

      [32m+[0m[0m vpc_config {
          [32m+[0m[0m ipv6_allowed_for_dual_stack = false
          [32m+[0m[0m security_group_ids          = (known after apply)
          [32m+[0m[0m subnet_ids                  = [
              [32m+[0m[0m "subnet-027bcb766a648dab3",
              [32m+[0m[0m "subnet-05c29484564e0db92",
            ]
          [32m+[0m[0m vpc_id                      = (known after apply)
        }
    }

[1m  # module.agile_stories.module.lambda.aws_lambda_function.estimate_story[0m will be created
[0m  [32m+[0m[0m resource "aws_lambda_function" "estimate_story" {
      [32m+[0m[0m architectures                  = (known after apply)
      [32m+[0m[0m arn                            = (known after apply)
      [32m+[0m[0m code_sha256                    = (known after apply)
      [32m+[0m[0m filename                       = "../../../backend/src/estimate_story/package.zip"
      [32m+[0m[0m function_name                  = "dev-agile-stories-estimate"
      [32m+[0m[0m handler                        = "lambda_function.lambda_handler"
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m invoke_arn                     = (known after apply)
      [32m+[0m[0m last_modified                  = (known after apply)
      [32m+[0m[0m memory_size                    = 256
      [32m+[0m[0m package_type                   = "Zip"
      [32m+[0m[0m publish                        = false
      [32m+[0m[0m qualified_arn                  = (known after apply)
      [32m+[0m[0m qualified_invoke_arn           = (known after apply)
      [32m+[0m[0m reserved_concurrent_executions = -1
      [32m+[0m[0m role                           = (known after apply)
      [32m+[0m[0m runtime                        = "python3.11"
      [32m+[0m[0m signing_job_arn                = (known after apply)
      [32m+[0m[0m signing_profile_version_arn    = (known after apply)
      [32m+[0m[0m skip_destroy                   = false
      [32m+[0m[0m source_code_hash               = (known after apply)
      [32m+[0m[0m source_code_size               = (known after apply)
      [32m+[0m[0m tags                           = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m tags_all                       = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m timeout                        = 30
      [32m+[0m[0m version                        = (known after apply)

      [32m+[0m[0m environment {
          [32m+[0m[0m variables = {
              [32m+[0m[0m "ENVIRONMENT"    = "dev"
              [32m+[0m[0m "OPENAI_API_KEY" = (sensitive value)
            }
        }

      [32m+[0m[0m vpc_config {
          [32m+[0m[0m ipv6_allowed_for_dual_stack = false
          [32m+[0m[0m security_group_ids          = (known after apply)
          [32m+[0m[0m subnet_ids                  = [
              [32m+[0m[0m "subnet-027bcb766a648dab3",
              [32m+[0m[0m "subnet-05c29484564e0db92",
            ]
          [32m+[0m[0m vpc_id                      = (known after apply)
        }
    }

[1m  # module.agile_stories.module.lambda.aws_lambda_function.get_status[0m will be created
[0m  [32m+[0m[0m resource "aws_lambda_function" "get_status" {
      [32m+[0m[0m architectures                  = (known after apply)
      [32m+[0m[0m arn                            = (known after apply)
      [32m+[0m[0m code_sha256                    = (known after apply)
      [32m+[0m[0m filename                       = "../../../backend/src/get_status/package.zip"
      [32m+[0m[0m function_name                  = "dev-agile-stories-status"
      [32m+[0m[0m handler                        = "lambda_function.lambda_handler"
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m invoke_arn                     = (known after apply)
      [32m+[0m[0m last_modified                  = (known after apply)
      [32m+[0m[0m memory_size                    = 128
      [32m+[0m[0m package_type                   = "Zip"
      [32m+[0m[0m publish                        = false
      [32m+[0m[0m qualified_arn                  = (known after apply)
      [32m+[0m[0m qualified_invoke_arn           = (known after apply)
      [32m+[0m[0m reserved_concurrent_executions = -1
      [32m+[0m[0m role                           = (known after apply)
      [32m+[0m[0m runtime                        = "python3.11"
      [32m+[0m[0m signing_job_arn                = (known after apply)
      [32m+[0m[0m signing_profile_version_arn    = (known after apply)
      [32m+[0m[0m skip_destroy                   = false
      [32m+[0m[0m source_code_hash               = (known after apply)
      [32m+[0m[0m source_code_size               = (known after apply)
      [32m+[0m[0m tags                           = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m tags_all                       = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m timeout                        = 10
      [32m+[0m[0m version                        = (known after apply)

      [32m+[0m[0m environment {
          [32m+[0m[0m variables = {
              [32m+[0m[0m "ENVIRONMENT" = "dev"
            }
        }

      [32m+[0m[0m vpc_config {
          [32m+[0m[0m ipv6_allowed_for_dual_stack = false
          [32m+[0m[0m security_group_ids          = (known after apply)
          [32m+[0m[0m subnet_ids                  = [
              [32m+[0m[0m "subnet-027bcb766a648dab3",
              [32m+[0m[0m "subnet-05c29484564e0db92",
            ]
          [32m+[0m[0m vpc_id                      = (known after apply)
        }
    }

[1m  # module.agile_stories.module.lambda.aws_security_group.lambda[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "lambda" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Security group for Agile Stories Lambda functions"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = (known after apply)
      [32m+[0m[0m name                   = "dev-agile-stories-lambda"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m vpc_id                 = "vpc-075ca467a1d924c87"
    }

[1m  # module.agile_stories.module.sqs.aws_cloudwatch_dashboard.sqs_dashboard[0m will be created
[0m  [32m+[0m[0m resource "aws_cloudwatch_dashboard" "sqs_dashboard" {
      [32m+[0m[0m dashboard_arn  = (known after apply)
      [32m+[0m[0m dashboard_body = (known after apply)
      [32m+[0m[0m dashboard_name = "dev-agile-stories-monitoring"
      [32m+[0m[0m id             = (known after apply)
    }

[1m  # module.agile_stories.module.sqs.aws_cloudwatch_metric_alarm.analysis_dlq_messages[0m will be created
[0m  [32m+[0m[0m resource "aws_cloudwatch_metric_alarm" "analysis_dlq_messages" {
      [32m+[0m[0m actions_enabled                       = true
      [32m+[0m[0m alarm_description                     = "Alarm when there are messages in the analysis DLQ"
      [32m+[0m[0m alarm_name                            = "dev-analysis-dlq-messages"
      [32m+[0m[0m arn                                   = (known after apply)
      [32m+[0m[0m comparison_operator                   = "GreaterThanThreshold"
      [32m+[0m[0m dimensions                            = {
          [32m+[0m[0m "QueueName" = "dev-agile-stories-analysis-dlq.fifo"
        }
      [32m+[0m[0m evaluate_low_sample_count_percentiles = (known after apply)
      [32m+[0m[0m evaluation_periods                    = 1
      [32m+[0m[0m id                                    = (known after apply)
      [32m+[0m[0m metric_name                           = "ApproximateNumberOfMessagesVisible"
      [32m+[0m[0m namespace                             = "AWS/SQS"
      [32m+[0m[0m period                                = 300
      [32m+[0m[0m statistic                             = "Maximum"
      [32m+[0m[0m tags                                  = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m tags_all                              = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m threshold                             = 1
      [32m+[0m[0m treat_missing_data                    = "notBreaching"
    }

[1m  # module.agile_stories.module.sqs.aws_cloudwatch_metric_alarm.analysis_queue_age[0m will be created
[0m  [32m+[0m[0m resource "aws_cloudwatch_metric_alarm" "analysis_queue_age" {
      [32m+[0m[0m actions_enabled                       = true
      [32m+[0m[0m alarm_description                     = "Alarm when messages are too old in the analysis queue"
      [32m+[0m[0m alarm_name                            = "dev-analysis-queue-message-age"
      [32m+[0m[0m arn                                   = (known after apply)
      [32m+[0m[0m comparison_operator                   = "GreaterThanThreshold"
      [32m+[0m[0m dimensions                            = {
          [32m+[0m[0m "QueueName" = "dev-agile-stories-analysis.fifo"
        }
      [32m+[0m[0m evaluate_low_sample_count_percentiles = (known after apply)
      [32m+[0m[0m evaluation_periods                    = 2
      [32m+[0m[0m id                                    = (known after apply)
      [32m+[0m[0m metric_name                           = "ApproximateAgeOfOldestMessage"
      [32m+[0m[0m namespace                             = "AWS/SQS"
      [32m+[0m[0m period                                = 300
      [32m+[0m[0m statistic                             = "Maximum"
      [32m+[0m[0m tags                                  = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m tags_all                              = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m threshold                             = 3600
      [32m+[0m[0m treat_missing_data                    = "notBreaching"
    }

[1m  # module.agile_stories.module.sqs.aws_cloudwatch_metric_alarm.estimation_dlq_messages[0m will be created
[0m  [32m+[0m[0m resource "aws_cloudwatch_metric_alarm" "estimation_dlq_messages" {
      [32m+[0m[0m actions_enabled                       = true
      [32m+[0m[0m alarm_description                     = "Alarm when there are messages in the estimation DLQ"
      [32m+[0m[0m alarm_name                            = "dev-estimation-dlq-messages"
      [32m+[0m[0m arn                                   = (known after apply)
      [32m+[0m[0m comparison_operator                   = "GreaterThanThreshold"
      [32m+[0m[0m dimensions                            = {
          [32m+[0m[0m "QueueName" = "dev-agile-stories-estimation-dlq.fifo"
        }
      [32m+[0m[0m evaluate_low_sample_count_percentiles = (known after apply)
      [32m+[0m[0m evaluation_periods                    = 1
      [32m+[0m[0m id                                    = (known after apply)
      [32m+[0m[0m metric_name                           = "ApproximateNumberOfMessagesVisible"
      [32m+[0m[0m namespace                             = "AWS/SQS"
      [32m+[0m[0m period                                = 300
      [32m+[0m[0m statistic                             = "Maximum"
      [32m+[0m[0m tags                                  = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m tags_all                              = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m threshold                             = 1
      [32m+[0m[0m treat_missing_data                    = "notBreaching"
    }

[1m  # module.agile_stories.module.sqs.aws_cloudwatch_metric_alarm.estimation_queue_age[0m will be created
[0m  [32m+[0m[0m resource "aws_cloudwatch_metric_alarm" "estimation_queue_age" {
      [32m+[0m[0m actions_enabled                       = true
      [32m+[0m[0m alarm_description                     = "Alarm when messages are too old in the estimation queue"
      [32m+[0m[0m alarm_name                            = "dev-estimation-queue-message-age"
      [32m+[0m[0m arn                                   = (known after apply)
      [32m+[0m[0m comparison_operator                   = "GreaterThanThreshold"
      [32m+[0m[0m dimensions                            = {
          [32m+[0m[0m "QueueName" = "dev-agile-stories-estimation.fifo"
        }
      [32m+[0m[0m evaluate_low_sample_count_percentiles = (known after apply)
      [32m+[0m[0m evaluation_periods                    = 2
      [32m+[0m[0m id                                    = (known after apply)
      [32m+[0m[0m metric_name                           = "ApproximateAgeOfOldestMessage"
      [32m+[0m[0m namespace                             = "AWS/SQS"
      [32m+[0m[0m period                                = 300
      [32m+[0m[0m statistic                             = "Maximum"
      [32m+[0m[0m tags                                  = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m tags_all                              = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m threshold                             = 3600
      [32m+[0m[0m treat_missing_data                    = "notBreaching"
    }

[1m  # module.agile_stories.module.sqs.aws_cloudwatch_metric_alarm.high_throughput[0m will be created
[0m  [32m+[0m[0m resource "aws_cloudwatch_metric_alarm" "high_throughput" {
      [32m+[0m[0m actions_enabled                       = true
      [32m+[0m[0m alarm_description                     = "Alarm when message throughput is unusually high"
      [32m+[0m[0m alarm_name                            = "dev-queue-high-throughput"
      [32m+[0m[0m arn                                   = (known after apply)
      [32m+[0m[0m comparison_operator                   = "GreaterThanThreshold"
      [32m+[0m[0m dimensions                            = {
          [32m+[0m[0m "QueueName" = "dev-agile-stories-analysis.fifo"
        }
      [32m+[0m[0m evaluate_low_sample_count_percentiles = (known after apply)
      [32m+[0m[0m evaluation_periods                    = 2
      [32m+[0m[0m id                                    = (known after apply)
      [32m+[0m[0m metric_name                           = "NumberOfMessagesReceived"
      [32m+[0m[0m namespace                             = "AWS/SQS"
      [32m+[0m[0m period                                = 300
      [32m+[0m[0m statistic                             = "Sum"
      [32m+[0m[0m tags                                  = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m tags_all                              = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m threshold                             = 1000
      [32m+[0m[0m treat_missing_data                    = "notBreaching"
    }

[1m  # module.agile_stories.module.sqs.aws_iam_policy.sqs_access[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_policy" "sqs_access" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m attachment_count = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m name             = "dev-agile-stories-sqs-access"
      [32m+[0m[0m name_prefix      = (known after apply)
      [32m+[0m[0m path             = "/"
      [32m+[0m[0m policy           = (known after apply)
      [32m+[0m[0m policy_id        = (known after apply)
      [32m+[0m[0m tags_all         = (known after apply)
    }

[1m  # module.agile_stories.module.sqs.aws_sqs_queue.analysis_dlq[0m will be created
[0m  [32m+[0m[0m resource "aws_sqs_queue" "analysis_dlq" {
      [32m+[0m[0m arn                               = (known after apply)
      [32m+[0m[0m content_based_deduplication       = true
      [32m+[0m[0m deduplication_scope               = (known after apply)
      [32m+[0m[0m delay_seconds                     = 0
      [32m+[0m[0m fifo_queue                        = true
      [32m+[0m[0m fifo_throughput_limit             = (known after apply)
      [32m+[0m[0m id                                = (known after apply)
      [32m+[0m[0m kms_data_key_reuse_period_seconds = (known after apply)
      [32m+[0m[0m max_message_size                  = 262144
      [32m+[0m[0m message_retention_seconds         = 1209600
      [32m+[0m[0m name                              = "dev-agile-stories-analysis-dlq.fifo"
      [32m+[0m[0m name_prefix                       = (known after apply)
      [32m+[0m[0m policy                            = (known after apply)
      [32m+[0m[0m receive_wait_time_seconds         = 0
      [32m+[0m[0m redrive_allow_policy              = (known after apply)
      [32m+[0m[0m redrive_policy                    = (known after apply)
      [32m+[0m[0m sqs_managed_sse_enabled           = (known after apply)
      [32m+[0m[0m tags                              = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m tags_all                          = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m url                               = (known after apply)
      [32m+[0m[0m visibility_timeout_seconds        = 30
    }

[1m  # module.agile_stories.module.sqs.aws_sqs_queue.analysis_queue[0m will be created
[0m  [32m+[0m[0m resource "aws_sqs_queue" "analysis_queue" {
      [32m+[0m[0m arn                               = (known after apply)
      [32m+[0m[0m content_based_deduplication       = true
      [32m+[0m[0m deduplication_scope               = (known after apply)
      [32m+[0m[0m delay_seconds                     = 0
      [32m+[0m[0m fifo_queue                        = true
      [32m+[0m[0m fifo_throughput_limit             = (known after apply)
      [32m+[0m[0m id                                = (known after apply)
      [32m+[0m[0m kms_data_key_reuse_period_seconds = (known after apply)
      [32m+[0m[0m max_message_size                  = 262144
      [32m+[0m[0m message_retention_seconds         = 86400
      [32m+[0m[0m name                              = "dev-agile-stories-analysis.fifo"
      [32m+[0m[0m name_prefix                       = (known after apply)
      [32m+[0m[0m policy                            = (known after apply)
      [32m+[0m[0m receive_wait_time_seconds         = 0
      [32m+[0m[0m redrive_allow_policy              = (known after apply)
      [32m+[0m[0m redrive_policy                    = (known after apply)
      [32m+[0m[0m sqs_managed_sse_enabled           = (known after apply)
      [32m+[0m[0m tags                              = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m tags_all                          = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m url                               = (known after apply)
      [32m+[0m[0m visibility_timeout_seconds        = 900
    }

[1m  # module.agile_stories.module.sqs.aws_sqs_queue.story_estimation[0m will be created
[0m  [32m+[0m[0m resource "aws_sqs_queue" "story_estimation" {
      [32m+[0m[0m arn                               = (known after apply)
      [32m+[0m[0m content_based_deduplication       = true
      [32m+[0m[0m deduplication_scope               = "messageGroup"
      [32m+[0m[0m delay_seconds                     = 0
      [32m+[0m[0m fifo_queue                        = true
      [32m+[0m[0m fifo_throughput_limit             = "perMessageGroupId"
      [32m+[0m[0m id                                = (known after apply)
      [32m+[0m[0m kms_data_key_reuse_period_seconds = (known after apply)
      [32m+[0m[0m max_message_size                  = 262144
      [32m+[0m[0m message_retention_seconds         = 86400
      [32m+[0m[0m name                              = "dev-agile-stories-estimation.fifo"
      [32m+[0m[0m name_prefix                       = (known after apply)
      [32m+[0m[0m policy                            = (known after apply)
      [32m+[0m[0m receive_wait_time_seconds         = 0
      [32m+[0m[0m redrive_allow_policy              = (known after apply)
      [32m+[0m[0m redrive_policy                    = (known after apply)
      [32m+[0m[0m sqs_managed_sse_enabled           = (known after apply)
      [32m+[0m[0m tags                              = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m tags_all                          = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m url                               = (known after apply)
      [32m+[0m[0m visibility_timeout_seconds        = 900
    }

[1m  # module.agile_stories.module.sqs.aws_sqs_queue.story_estimation_dlq[0m will be created
[0m  [32m+[0m[0m resource "aws_sqs_queue" "story_estimation_dlq" {
      [32m+[0m[0m arn                               = (known after apply)
      [32m+[0m[0m content_based_deduplication       = true
      [32m+[0m[0m deduplication_scope               = (known after apply)
      [32m+[0m[0m delay_seconds                     = 0
      [32m+[0m[0m fifo_queue                        = true
      [32m+[0m[0m fifo_throughput_limit             = (known after apply)
      [32m+[0m[0m id                                = (known after apply)
      [32m+[0m[0m kms_data_key_reuse_period_seconds = (known after apply)
      [32m+[0m[0m max_message_size                  = 262144
      [32m+[0m[0m message_retention_seconds         = 1209600
      [32m+[0m[0m name                              = "dev-agile-stories-estimation-dlq.fifo"
      [32m+[0m[0m name_prefix                       = (known after apply)
      [32m+[0m[0m policy                            = (known after apply)
      [32m+[0m[0m receive_wait_time_seconds         = 0
      [32m+[0m[0m redrive_allow_policy              = (known after apply)
      [32m+[0m[0m redrive_policy                    = (known after apply)
      [32m+[0m[0m sqs_managed_sse_enabled           = (known after apply)
      [32m+[0m[0m tags                              = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m tags_all                          = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "Project"     = "agile-stories"
        }
      [32m+[0m[0m url                               = (known after apply)
      [32m+[0m[0m visibility_timeout_seconds        = 30
    }

[1m  # module.agile_stories.module.vpc.aws_eip.nat[0][0m is tainted, so must be [1m[31mreplaced[0m
[0m[31m-[0m/[32m+[0m[0m resource "aws_eip" "nat" {
      [33m~[0m[0m allocation_id        = "eipalloc-0e5d22b8d8335df65" -> (known after apply)
      [33m~[0m[0m arn                  = "arn:aws:ec2:us-east-1:784902437693:elastic-ip/eipalloc-0e5d22b8d8335df65" -> (known after apply)
      [32m+[0m[0m association_id       = (known after apply)
      [32m+[0m[0m carrier_ip           = (known after apply)
      [32m+[0m[0m customer_owned_ip    = (known after apply)
      [33m~[0m[0m id                   = "eipalloc-0e5d22b8d8335df65" -> (known after apply)
      [32m+[0m[0m instance             = (known after apply)
      [32m+[0m[0m ipam_pool_id         = (known after apply)
      [33m~[0m[0m network_border_group = "us-east-1" -> (known after apply)
      [32m+[0m[0m network_interface    = (known after apply)
      [32m+[0m[0m private_dns          = (known after apply)
      [32m+[0m[0m private_ip           = (known after apply)
      [32m+[0m[0m ptr_record           = (known after apply)
      [33m~[0m[0m public_dns           = "ec2-34-225-121-117.compute-1.amazonaws.com" -> (known after apply)
      [33m~[0m[0m public_ip            = "34.225.121.117" -> (known after apply)
      [33m~[0m[0m public_ipv4_pool     = "amazon" -> (known after apply)
        tags                 = {
            "Name" = "dev-nat-eip-0"
        }
      [33m~[0m[0m vpc                  = true -> (known after apply)
        [90m# (2 unchanged attributes hidden)[0m[0m
    }

[1m  # module.agile_stories.module.vpc.aws_nat_gateway.main[0][0m will be created
[0m  [32m+[0m[0m resource "aws_nat_gateway" "main" {
      [32m+[0m[0m allocation_id                      = (known after apply)
      [32m+[0m[0m association_id                     = (known after apply)
      [32m+[0m[0m connectivity_type                  = "public"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m network_interface_id               = (known after apply)
      [32m+[0m[0m private_ip                         = (known after apply)
      [32m+[0m[0m public_ip                          = (known after apply)
      [32m+[0m[0m secondary_private_ip_address_count = (known after apply)
      [32m+[0m[0m secondary_private_ip_addresses     = (known after apply)
      [32m+[0m[0m subnet_id                          = "subnet-05c29484564e0db92"
      [32m+[0m[0m tags                               = {
          [32m+[0m[0m "Name" = "dev-nat-gateway-0"
        }
      [32m+[0m[0m tags_all                           = {
          [32m+[0m[0m "Name" = "dev-nat-gateway-0"
        }
    }

[1mPlan:[0m 42 to add, 3 to change, 1 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m analysis_queue_url    = (known after apply)
  [32m+[0m[0m estimation_queue_url  = (known after apply)
  [33m~[0m[0m lambda_function_names = [
      [31m-[0m[0m [90mnull[0m[0m,
      [31m-[0m[0m [90mnull[0m[0m,
      [31m-[0m[0m [90mnull[0m[0m,
      [32m+[0m[0m "dev-agile-stories-analyze",
      [32m+[0m[0m "dev-agile-stories-estimate",
      [32m+[0m[0m "dev-agile-stories-status",
    ]
